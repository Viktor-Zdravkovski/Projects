// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRental.DataBase;

#nullable disable

namespace MovieRental.DataBase.Migrations
{
    [DbContext(typeof(MovieRentalDbContext))]
    [Migration("20240815210753_withReturnedOn")]
    partial class withReturnedOn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MovieRental.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 15,
                            Genre = 0,
                            IsAvailable = true,
                            Language = 1,
                            Length = new TimeSpan(0, 2, 0, 0, 0),
                            Quantity = 10,
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Action Movie 1"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 10,
                            Genre = 1,
                            IsAvailable = true,
                            Language = 2,
                            Length = new TimeSpan(0, 1, 45, 0, 0),
                            Quantity = 5,
                            ReleaseDate = new DateTime(2021, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Comedy Movie 1"
                        },
                        new
                        {
                            Id = 3,
                            AgeRestriction = 12,
                            Genre = 4,
                            IsAvailable = false,
                            Language = 3,
                            Length = new TimeSpan(0, 2, 30, 0, 0),
                            Quantity = 8,
                            ReleaseDate = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sci-Fi Movie 1"
                        },
                        new
                        {
                            Id = 4,
                            AgeRestriction = 15,
                            Genre = 2,
                            IsAvailable = true,
                            Language = 4,
                            Length = new TimeSpan(0, 2, 12, 0, 0),
                            Quantity = 3,
                            ReleaseDate = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Parasite"
                        },
                        new
                        {
                            Id = 5,
                            AgeRestriction = 15,
                            Genre = 0,
                            IsAvailable = true,
                            Language = 1,
                            Length = new TimeSpan(0, 2, 16, 0, 0),
                            Quantity = 10,
                            ReleaseDate = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        });
                });

            modelBuilder.Entity("MovieRental.Domain.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rental");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RentedOn = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2024, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RentedOn = new DateTime(2024, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 3,
                            RentedOn = new DateTime(2024, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2024, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 4,
                            RentedOn = new DateTime(2024, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2024, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 5,
                            RentedOn = new DateTime(2024, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2024, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("MovieRental.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            CardNumber = "1234-5678-9012-3456",
                            CreatedOn = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "AliceJohnson@gmail.com",
                            FullName = "Alice Johnson",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 34,
                            CardNumber = "2345-6789-0123-4567",
                            CreatedOn = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "BobSmith@gmail.com",
                            FullName = "Bob Smith",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 0
                        },
                        new
                        {
                            Id = 3,
                            Age = 45,
                            CardNumber = "3456-7890-1234-5678",
                            CreatedOn = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "CharlieBrown@gmail.com",
                            FullName = "Charlie Brown",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 0
                        },
                        new
                        {
                            Id = 4,
                            Age = 29,
                            CardNumber = "4567-8901-2345-6789",
                            CreatedOn = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "DianaPrince@gmail.com",
                            FullName = "Diana Prince",
                            IsSubscriptionExpired = false,
                            SubscriptionType = 0
                        },
                        new
                        {
                            Id = 5,
                            Age = 38,
                            CardNumber = "5678-9012-3456-7890",
                            CreatedOn = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "EdwardNygma@gmail.com",
                            FullName = "Edward Nygma",
                            IsSubscriptionExpired = true,
                            SubscriptionType = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
